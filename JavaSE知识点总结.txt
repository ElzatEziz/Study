JavaSE知识点总结

1.第一章：Java开发环境的搭建
	* JavaSE JavaEE JavaME
	* JDK JRE JVM
	* Java语言的非常重要的两个特性：健壮性（自动垃圾回收机制GC）、可移植性（跨平台，因为有JVM，才跨平台。）
	* 安装JDK。
	* 配置环境变量path和classpath，你要能够完全的理解path变量干什么的，classpath环境变量是干什么的。
	* 编写第一个HelloWorld程序，从编写，到编译，到最终的运行能够独立的完成。
	* javac命令怎么用。
	* java命令怎么用。
	* 在java语言中的注释怎么写？三种注释方式。
	* public class和class的区别？
	
2.第二章：Java基础语法
	* 标识符
		标识符就是负责起名字的。
		类名、接口名、方法名、变量名.....
		标识符命名规则必须背会。
		标识符命名规范要必须遵守。
	* 关键字
		public static byte short int long float double boolean char true false
		private protected transient.....
	* 字面量
		字面量就是数据
		1 2 3 4 5 6 7 8 
		3.14
		true false
		'a'
		"a"
	* 变量：
		变量怎么定义
		变量怎么赋值
		变量的作用域
		变量的分类
	* 数据类型
		数据类型都有哪些：byte short int long float double boolean char
		每个数据类型占用空间大小是多少：1 2 4 8 4 8 1 2 
		byte类型的取值范围。
		字符编码方式（理解字符编码）。GBK UTF-8... ASCII ISO-8859-1...
		二进制和十进制之间的换算。
		数据类型之间的转换规则：6条规则
	* 运算符
		算术运算符： + - * / ++ -- %
		关系运算符：> >= < <= == != 
		逻辑运算符：& | ! ^ && ||
		条件运算符（三目运算符）：  布尔表达式 ? 表达式1 : 表达式2
		字符串连接运算符：+
		...
	* 控制语句
		分支语句:
			if
			switch
		循环语句：
			for
			while
			do..while..
		转向语句：
			break
			continue
			return
	* 方法（函数）
		- 方法怎么定义
		- 方法怎么调用
		- 对方法返回值的理解
		- 一个方法怎么返回值的
		- 一个方法执行结束之后返回值怎么接收
		- 方法的重载overload
	* 方法递归（递归算法）
	 
3.第三章：面向对象
	* 面向对象怎么理解？
	* 类和对象
		-什么是类
		-什么是对象
	* 类怎么定义
	* 对象怎么创建
	* 属性怎么访问
	* 方法怎么访问
	* 在面向对象这一章节要画很多内存图。去理解JVM的内存管理。
	* new出来的对象存储在哪里？局部变量存在哪里？实例变量存在哪里？静态变量存储在哪里？
	* 什么是栈内存？什么是堆内存？什么是方法区？每个内存空间中存储什么数据，都要统统理解/记住。
	* 空指针异常
	* 封装：属性私有化，对外提供公开的setter和getter方法。
	* 构造方法：constructor
	* this关键字
	* static关键字
	* super关键字
	* 继承
	* 方法的覆盖
	* 多态：多态的基础语法 + 多态的作用（OCP开闭原则）
	* 抽象类
	* 接口
	* Object类中常用的方法。
		equals hashCode toString finalize clone....
	* 内部类：重点掌握匿名内部类。
	...
	
4.第四章：数组
	* 数组的优点是什么？
	* 数组的缺点是什么？
	* 一维数组的静态初始化和动态初始化怎么完成？
	* 一维数组的遍历？
	* 一维数组中元素如何访问？
	* 二维数组的静态初始化和动态初始化怎么完成？
	* 二维数组遍历？
	* 数组在空间存储上，内存结构是如何的？
	* 数组的空间复杂度和时间复杂度？
	* main方法上的String[] args参数是干什么的？
	* 数组的扩容，数组的拷贝？
	* 冒泡排序算法？
	* 选择排序算法？
	* 二分法查找算法？
	* 数组的工具类？
		java.util.Arrays;
	* 要能够使用数组模拟栈数据结构？
	
5.第五章：异常
	* 异常怎么理解？
	* 异常在java中有什么用？
	* 异常在java中以什么形式存在？
		类和对象的形式存在。
	* 异常的继承结构图
	* 什么是编译时异常？
	* 什么是运行时异常？
	* 异常的两种处理方式：
		第一种：捕捉try..catch
		第二种：throws（声明该方法出现此异常时上抛。）
	* finally子句的用法
	* 怎么自定义异常？
	* 怎么手动抛出异常？throw new RuntimeException();
	* 异常对象的常用两个方法？
		e.getMessage(); 获取异常的简短信息。
		e.printStackTrace();打印异常追踪信息
	* 方法重写与异常。
	* 关键字：
		try
		catch
		finally
		throw 
		throws
		
6.第六章：常用类
	* String类的实现原理，内存存储方式。
	* String类的构造方法？
	* String类的常用方法？
	* StringBuilder StringBuffer的常用方法？以及和String的区别？
	* 八种基本数据类型对应的包装类：
		Integer为代表
		自动装箱和自动拆箱是什么？
		Integer、int、String三种类型互相转换？
	* 数字的处理：
		NumberFormat
		BigDecimal（财务数据）
	* 日期处理：
		怎么获取系统当前时间
		怎么获取毫秒
		怎么进行日期格式化
		怎么将字符串日期转换成日期类型Date
	* 枚举类型
	* 随机数
	....
	
7.第七章：集合
	* 集合中都可以存储什么元素？
	* 集合的继承结构图Collection
	* 集合的继承结构图Map
	* Collection接口中常用的方法
	* Collection集合的遍历方法。
	* List集合特点
		List集合中特有的方法。（通过下标操作）
	* Set集合特点
	* ArrayList集合：
		底层是什么数据结构？
		ArrayList集合的初始化容量？
		ArrayList集合的扩容是怎样的？
	* LinkedList集合：
		底层是什么数据结构？
		链表数据结构的优点和缺点。
	* Vector集合：
		底层是什么数据结构？
		Vector集合的初始化容量？
		Vector集合的扩容是怎样的？
		Vector和ArrayList集合的区别？
	* HashSet集合底层是HashMap
	* SortedSet接口：可排序的集合，子类有：TreeSet。
	* TreeSet集合底层是TreeMap集合。
	* Map集合中的常用方法？
	* HashMap集合的底层数据结构？
		哈希表
		哈希算法是怎样的？
		为什么要重写hashCode + equals
		HashMap的默认加载因子
		HahsMap集合的初始化容量是？
		HahsMap集合的扩容是怎样的？
	* Hashtable集合底层是什么数据结构？
		Hashtable的初始化容量和扩容。
	* Hashtable和HashMap集合的区别？
	* 对Hashtable下的子类Properties有一定的理解。
	* SortedMap接口下的实现类：TreeMap
	* TreeMap的key可排序是如何实现的。
	* TreeMap集合底层是一个二叉树的数据结构，他是怎么样的一个数据结构？
	* Map集合的遍历有多种方式都需要掌握。
	* 集合的泛型
	* 集合的工具类：Collections的常用方法
		
	
8.第八章：IO流
	*重点掌握哪些流？16个流重点掌握。
		FileInputStream
		FileOutputStream
		FileReader
		FileWriter
		
		BufferedReader
		BufferedWriter
		BufferedInputStream
		BufferedOutputStream
		
		InputStreamReader
		OutputStreamWriter
		
		ObjectInputStream
		ObjectOutputStream
		
		DataInputStream
		DataOutputStream
		
		PrintWriter
		PrintStream
	* 流的分类？
		输入流 输出流
		字节流 字符流
		节点流 包装流
		
	* 能够使用流完成文件的复制
	
	* 掌握File类的常用方法。
		
9.第九章：多线程（细节信息量很大。）

	* 多线程的三种实现方式：
		继承Thread
		实现Runnable
		实现Callable
		
	* 多线程的生命周期。
	
	* 线程的调度（sleep、yield.....）
	
	* 线程的安全（重点中的重点）
	
	* 定时器/定时任务
	
	* 守护线程
	
	* wait方法和notify方法，生产者和消费者模式。
	....
	
10.第十章：反射机制
	* 获取Class的三种方式
	* 通过反射机制能够实例化对象
	* 反射Field，操作Field
	* 反射Method，操作Method
	* 反射Constructor，操作Constructor
	* 通过反射机制获取父类，以及获取父接口。
	
11.第十一章：注解
	* 怎么自定义注解？
	* 元注解有哪些？
	* 通过反射机制读取注解？
	* 了解注解的实现原理以及作用？














 